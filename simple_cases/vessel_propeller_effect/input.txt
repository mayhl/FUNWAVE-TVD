!INPUT FILE FOR FUNWAVE_TVD
  ! NOTE: all input parameter are capital sensitive
  ! --------------------TITLE-------------------------------------
  ! title only for log file
TITLE = FUNWAVE
  ! -------------------HOT START---------------------------------
HOT_START = F
FileNumber_HOTSTART = 1
  ! -------------------PARALLEL INFO-----------------------------
  !
  !    PX,PY - processor numbers in X and Y
  !    NOTE: make sure consistency with mpirun -np n (px*py)
  !
PX = 2
PY = 2
  ! --------------------DEPTH-------------------------------------
  ! Depth types, DEPTH_TYPE=DATA: from depth file
  !              DEPTH_TYPE=FLAT: idealized flat, need depth_flat
  !              DEPTH_TYPE=SLOPE: idealized slope,
  !                                 need slope,SLP starting point, Xslp
  !                                 and depth_flat
DEPTH_TYPE = FLAT
  ! Depth file
  ! depth format NOD: depth at node (M1xN1), ELE: depth at ele (MxN)
  ! where (M1,N1)=(M+1,N+1)
DEPTH_FILE = depth.txt
DepthFormat = ELE
  ! if depth is flat and slope, specify flat_depth
DEPTH_FLAT = 10.0
  if depth is slope, specify slope and starting point
SLP = 0.05
Xslp = 10.0

  ! -------------------PRINT---------------------------------
  ! PRINT*,
  ! result folder
RESULT_FOLDER = output/

  ! ------------------DIMENSION-----------------------------
  ! global grid dimension
Mglob = 500
Nglob = 120

  ! ----------------- TIME----------------------------------
  ! time: total computational time/ plot time / screen interval
  ! all in seconds
TOTAL_TIME = 80.0
PLOT_INTV = 1.0
PLOT_INTV_STATION = 0.1
SCREEN_INTV = 5.0
HOTSTART_INTV = 360000000000.0

  ! -----------------GRID----------------------------------
  ! if use spherical grid, in decimal degrees
StretchGrid = F
Lon_West = 120.0
Lat_South = 0.0
Dphi = 0.0042
Dtheta = 0.0042
!DX_FILE = ../input/dx_str.txt
!DY_FILE = ../input/dy_str.txt
CORIOLIS_FILE = ../input/cori_str.txt
  ! cartesian grid sizes
DX = 2.0
DY = 2.0
  ! --------------- INITIAL UVZ ---------------------------
  ! INI_UVZ - initial UVZ e.g., initial deformation
  !         must provide three (3) files
INI_UVZ = F
  ! if true, input eta u and v file names
ETA_FILE = ../result_irr/eta_0218
U_FILE = ../result_irr/u_0218
V_FILE = ../result_irr/v_0218
MASK_FILE = ../result_irr/mask_0218
HotStartTime = 2160.066
OutputStartNumber = 219
  ! ----------------SHIP WAKES ----------------------------
VESSEL_FOLDER = vessel_propeller/
NumVessel = 2
  ! ----------------WAVEMAKER------------------------------
  !  wave maker
  ! LEF_SOL- left boundary solitary, need AMP,DEP, LAGTIME
  ! INI_SOL- initial solitary wave, WKN B solution,
  ! need AMP, DEP, XWAVEMAKER
  ! INI_REC - rectangular hump, need to specify Xc,Yc and WID
  ! WK_REG - Wei and Kirby 1999 internal wave maker, Xc_WK,Tperiod
  !          AMP_WK,DEP_WK,Theta_WK, Time_ramp (factor of period)
  ! WK_IRR - Wei and Kirby 1999 TMA spectrum wavemaker, Xc_WK,
  !          DEP_WK,Time_ramp, Delta_WK, FreqPeak, FreqMin,FreqMax,
  !          Hmo,GammaTMA,ThetaPeak
  ! WK_TIME_SERIES - fft time series to get each wave component
  !                 and then use Wei and Kirby 1999
  !          need input WaveCompFile (including 3 columns: per,amp,pha)
  !          NumWaveComp,PeakPeriod,DEP_WK,Xc_WK,Ywidth_WK
WAVEMAKER = nothing
  ! wave components based on fft time series
NumWaveComp = 1505
PeakPeriod = 1.0
WaveCompFile = ../fft/wavemk_per_amp_pha.txt
  ! solitary wave
AMP = 3.
DEP = 15.
LAGTIME = 0.0
XWAVEMAKER = 400.
  ! Xc, Yc and WID (degrees) are for rectangular hump with AMP
Xc = 501.00
Yc = 501.00
WID = 100.0
  ! Wei and Kirby 1999
Time_ramp = 2.0
Delta_WK = 2.0    ! width parameter 0.3-0.6
DEP_WK = 0.4572
Xc_WK = 10.0
Yc_WK = 12.5
Ywidth_WK = 20000.0
  ! Wei and Kirby regular wave
Tperiod = 1.3
AMP_WK = 0.0675
Theta_WK = 0.0
  ! Wei and Kirby irregular wave
FreqPeak = 0.125
FreqMin = 0.0833
FreqMax = 0.2
Hmo = 2.0
GammaTMA = 5.0
ThetaPeak = 0.0
Sigma_Theta = 10.0
  ! ---------------- PERIODIC BOUNDARY CONDITION ---------
  ! South-North periodic boundary condition
  !
PERIODIC = F
  ! ---------------- SPONGE LAYER ------------------------
  ! DHI type sponge layer
  ! need to specify widths of four boundaries and parameters
  ! set width=0.0 if no sponge
  ! R_sponge: decay rate
  ! A_sponge: maximum decay rate
  ! e.g., sharp: R=0.85
  !       mild:  R=0.90, A=5.0
  !       very mild, R=0.95, A=5.0
DIFFUSION_SPONGE = F
FRICTION_SPONGE = T
DIRECT_SPONGE = T
Csp = 0.10
CDsponge = 10.0
Sponge_west_width =  100.0
Sponge_east_width =  100.0
Sponge_south_width = 20.0
Sponge_north_width = 20.0
R_sponge = 0.85
A_sponge = 5.0
ETA_LIMITER = F
CrestLimit = 8.0
TroughLimit = -8.0
  ! ----------------OBSTACLES-----------------------------
  ! obstacle structures using mask_struc file
  ! mask_struc =0 means structure element
  ! give a file contains a mask array with Mloc X Nloc
!OBSTACLE_FILE=struct.txt

  ! ----------------PHYSICS------------------------------
  ! parameters to control type of equations
  ! dispersion: all dispersive terms
  ! gamma1=1.0,gamma2=0.0: NG's equations
  ! gamma1=1.0,gamma2=1.0: Fully nonlinear equations
DISPERSION = T
Gamma1 = 1.0
Gamma2 = 1.0
Gamma3 = 1.0
Beta_ref=-0.531
SWE_ETA_DEP = 0.7
VISCOSITY_BREAKING = T
  !----------------Friction-----------------------------
Friction_Matrix=F
Cd_file= cd.txt
Cd = 0.0


  ! ----------------NUMERICS----------------------------
  ! time scheme: runge_kutta for all types of equations
  !              predictor-corrector for NSWE
  ! space scheme: second-order
  !               fourth-order
  ! construction: HLLC
  ! cfl condition: CFL
  ! froude number cap: FroudeCap

Time_Scheme = Runge_Kutta
!Time_Scheme = Predictor_Corrector
  ! spatial differencing
!HIGH_ORDER = THIRD
HIGH_ORDER = FOURTH
CONSTRUCTION = HLLC
  ! CFL
CFL = 0.5
  ! Froude Number Cap (to avoid jumping drop, set 10)
FroudeCap = 10.0

  ! --------------WET-DRY-------------------------------
  ! MinDepth for wetting-drying
MinDepth=0.02
  ! -----------------
  ! MinDepthfrc to limit bottom friction
MinDepthFrc = 0.02

  ! -------------- SHOW BREAKING -----------------------
  ! breaking is calculated using shock wave capturing scheme
  ! the criteria is only for demonstration or bubble calculation
  ! Cbrk1=0.65,Cbrk2=0.35, for irregular waves, there are much small!
  !
  ! WAVEMAKER_VIS : viscosity is added on wavemaker
  ! (*** when VISCOSITY_BREAKING = F ***)
  ! --> visbrk(=cbrk2), WAVEMAKER_visbrk(=WAVEMAKER_Cbrk)
SHOW_BREAKING = F
Cbrk1 = 0.70
Cbrk2 = 0.40
WAVEMAKER_Cbrk = 0.025
WAVEMAKER_VIS = F
visbrk = 0.40
WAVEMAKER_visbrk = 0.025
  ! ----------------- MIXING ---------------------------
  ! if use smagorinsky mixing, have to set -DMIXING in Makefile
  ! and set averaging time interval, T_INTV_mean, default: 20s
T_INTV_mean = 36.4
C_smg = 0.25
nu_bkg = 0.0
  ! ----------------- COUPLING -------------------------
  ! if do coupling, have to set -DCOUPLING in Makefile
COUPLING_FILE = coupling.txt
  ! -----------------OUTPUT-----------------------------
  ! stations
  ! if NumberStations>0, need input i,j in STATION_FILE
NumberStations = 0
STATIONS_FILE = gauges.txt
  ! output variables, T=.TRUE, F = .FALSE.
DEPTH_OUT = T
U = T
V = T
ETA = T
Hmax = F
Hmin = F
MFmax = F
Umax = F
VORmax = F
Umean = F
Vmean = F
ETAmean = F
MASK = T
MASK9 = F
SXL = F
SXR = F
SYL = F
SYR = F
SourceX = F
SourceY = F
P = F
Q = F
Fx = F
Fy = F
Gx = F
Gy = F
AGE = F
TMP = T
WaveHeight = F
  ! -----------------Additional Variables---------------------------
EtaBlowVal=10.
STEADY_TIME=9.1
WaveHeightSig = F
  ! ------  Sediment
Bed_Change = T
BedLoad = T
PickupReduction = T
ReductionParameter = 0.65
C_limiter = 0.65
D50 = 0.00012
Sdensity = 2.65
n_porosity = 0.46
!WS = 0.0125 ! if commented calculate by model
Shields_cr = 0.05
Shields_cr_bedload = 0.05
Tan_phi = 0.7
Kappa1 = 0.3333
Kappa2 = 1.0
MinDepthPickup = 0.001
Avalanche = T
Aval_interval = 1.0
Morph_interval = 1.0
SedimentMassSource = F
SedimentMomentDC = F
SedimentMomentEXG = F







